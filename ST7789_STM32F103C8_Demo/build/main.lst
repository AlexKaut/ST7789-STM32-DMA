ARM GAS  /tmp/ccqomWwO.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB69:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "st7789.h"
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
ARM GAS  /tmp/ccqomWwO.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  44:Core/Src/main.c **** DMA_HandleTypeDef hdma_spi1_tx;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** static void MX_GPIO_Init(void);
  53:Core/Src/main.c **** static void MX_DMA_Init(void);
  54:Core/Src/main.c **** static void MX_SPI1_Init(void);
  55:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  60:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /**
  65:Core/Src/main.c ****   * @brief  The application entry point.
  66:Core/Src/main.c ****   * @retval int
  67:Core/Src/main.c ****   */
  68:Core/Src/main.c **** int main(void)
  69:Core/Src/main.c **** {
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
ARM GAS  /tmp/ccqomWwO.s 			page 3


  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  93:Core/Src/main.c ****   MX_DMA_Init();
  94:Core/Src/main.c ****   MX_SPI1_Init();
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  96:Core/Src/main.c ****   ST7789_Init();
  97:Core/Src/main.c ****   ST7789_TestColors();
  98:Core/Src/main.c ****   ST7789_Fill_Color(BLACK);
  99:Core/Src/main.c ****   /* USER CODE END 2 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Infinite loop */
 102:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 103:Core/Src/main.c ****   while (1)
 104:Core/Src/main.c ****   {
 105:Core/Src/main.c ****     ST7789_Test();
 106:Core/Src/main.c ****     /* USER CODE END WHILE */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 109:Core/Src/main.c ****   }
 110:Core/Src/main.c ****   /* USER CODE END 3 */
 111:Core/Src/main.c **** }
 112:Core/Src/main.c **** 
 113:Core/Src/main.c **** /**
 114:Core/Src/main.c ****   * @brief System Clock Configuration
 115:Core/Src/main.c ****   * @retval None
 116:Core/Src/main.c ****   */
 117:Core/Src/main.c **** void SystemClock_Config(void)
 118:Core/Src/main.c **** {
 119:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 120:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 123:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 130:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 131:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 132:Core/Src/main.c ****   {
 133:Core/Src/main.c ****     Error_Handler();
 134:Core/Src/main.c ****   }
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 137:Core/Src/main.c ****   */
 138:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 139:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 143:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 146:Core/Src/main.c ****   {
 147:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccqomWwO.s 			page 4


 148:Core/Src/main.c ****   }
 149:Core/Src/main.c **** }
 150:Core/Src/main.c **** 
 151:Core/Src/main.c **** /**
 152:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 153:Core/Src/main.c ****   * @param None
 154:Core/Src/main.c ****   * @retval None
 155:Core/Src/main.c ****   */
 156:Core/Src/main.c **** static void MX_SPI1_Init(void)
 157:Core/Src/main.c **** {
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 166:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 167:Core/Src/main.c ****   hspi1.Instance = SPI1;
 168:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 169:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 170:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 171:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 172:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 173:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 174:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 175:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 176:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 177:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 178:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 179:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 180:Core/Src/main.c ****   {
 181:Core/Src/main.c ****     Error_Handler();
 182:Core/Src/main.c ****   }
 183:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** }
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** /**
 190:Core/Src/main.c ****   * Enable DMA controller clock
 191:Core/Src/main.c ****   */
 192:Core/Src/main.c **** static void MX_DMA_Init(void)
 193:Core/Src/main.c **** {
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* DMA controller clock enable */
 196:Core/Src/main.c ****   __HAL_RCC_DMA1_CLK_ENABLE();
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   /* DMA interrupt init */
 199:Core/Src/main.c ****   /* DMA1_Channel3_IRQn interrupt configuration */
 200:Core/Src/main.c ****   HAL_NVIC_SetPriority(DMA1_Channel3_IRQn, 0, 0);
 201:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 202:Core/Src/main.c **** 
 203:Core/Src/main.c **** }
 204:Core/Src/main.c **** 
ARM GAS  /tmp/ccqomWwO.s 			page 5


 205:Core/Src/main.c **** /**
 206:Core/Src/main.c ****   * @brief GPIO Initialization Function
 207:Core/Src/main.c ****   * @param None
 208:Core/Src/main.c ****   * @retval None
 209:Core/Src/main.c ****   */
 210:Core/Src/main.c **** static void MX_GPIO_Init(void)
 211:Core/Src/main.c **** {
  26              		.loc 1 211 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 70B5     		push	{r4, r5, r6, lr}
  31              		.cfi_def_cfa_offset 16
  32              		.cfi_offset 4, -16
  33              		.cfi_offset 5, -12
  34              		.cfi_offset 6, -8
  35              		.cfi_offset 14, -4
  36 0002 86B0     		sub	sp, sp, #24
  37              		.cfi_def_cfa_offset 40
 212:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 212 3 view .LVU1
  39              		.loc 1 212 20 is_stmt 0 view .LVU2
  40 0004 02AD     		add	r5, sp, #8
  41 0006 0024     		movs	r4, #0
  42 0008 0294     		str	r4, [sp, #8]
  43 000a 0394     		str	r4, [sp, #12]
  44 000c 0494     		str	r4, [sp, #16]
  45 000e 0594     		str	r4, [sp, #20]
 213:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 214:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 217:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  46              		.loc 1 217 3 is_stmt 1 view .LVU3
  47              	.LBB4:
  48              		.loc 1 217 3 view .LVU4
  49              		.loc 1 217 3 view .LVU5
  50 0010 134B     		ldr	r3, .L3
  51 0012 9A69     		ldr	r2, [r3, #24]
  52 0014 42F00402 		orr	r2, r2, #4
  53 0018 9A61     		str	r2, [r3, #24]
  54              		.loc 1 217 3 view .LVU6
  55 001a 9A69     		ldr	r2, [r3, #24]
  56 001c 02F00402 		and	r2, r2, #4
  57 0020 0092     		str	r2, [sp]
  58              		.loc 1 217 3 view .LVU7
  59 0022 009A     		ldr	r2, [sp]
  60              	.LBE4:
  61              		.loc 1 217 3 view .LVU8
 218:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  62              		.loc 1 218 3 view .LVU9
  63              	.LBB5:
  64              		.loc 1 218 3 view .LVU10
  65              		.loc 1 218 3 view .LVU11
  66 0024 9A69     		ldr	r2, [r3, #24]
  67 0026 42F00802 		orr	r2, r2, #8
  68 002a 9A61     		str	r2, [r3, #24]
ARM GAS  /tmp/ccqomWwO.s 			page 6


  69              		.loc 1 218 3 view .LVU12
  70 002c 9B69     		ldr	r3, [r3, #24]
  71 002e 03F00803 		and	r3, r3, #8
  72 0032 0193     		str	r3, [sp, #4]
  73              		.loc 1 218 3 view .LVU13
  74 0034 019B     		ldr	r3, [sp, #4]
  75              	.LBE5:
  76              		.loc 1 218 3 view .LVU14
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 221:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, ST7789_RST_Pin|ST7789_DC_Pin|ST7789_BLK_Pin, GPIO_PIN_RESET);
  77              		.loc 1 221 3 view .LVU15
  78 0036 0B4E     		ldr	r6, .L3+4
  79 0038 2246     		mov	r2, r4
  80 003a 4FF4E071 		mov	r1, #448
  81 003e 3046     		mov	r0, r6
  82 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
  83              	.LVL0:
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /*Configure GPIO pins : ST7789_RST_Pin ST7789_DC_Pin ST7789_BLK_Pin */
 224:Core/Src/main.c ****   GPIO_InitStruct.Pin = ST7789_RST_Pin|ST7789_DC_Pin|ST7789_BLK_Pin;
  84              		.loc 1 224 3 view .LVU16
  85              		.loc 1 224 23 is_stmt 0 view .LVU17
  86 0044 4FF4E073 		mov	r3, #448
  87 0048 0293     		str	r3, [sp, #8]
 225:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  88              		.loc 1 225 3 is_stmt 1 view .LVU18
  89              		.loc 1 225 24 is_stmt 0 view .LVU19
  90 004a 0123     		movs	r3, #1
  91 004c 0393     		str	r3, [sp, #12]
 226:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  92              		.loc 1 226 3 is_stmt 1 view .LVU20
  93              		.loc 1 226 24 is_stmt 0 view .LVU21
  94 004e 0494     		str	r4, [sp, #16]
 227:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  95              		.loc 1 227 3 is_stmt 1 view .LVU22
  96              		.loc 1 227 25 is_stmt 0 view .LVU23
  97 0050 0223     		movs	r3, #2
  98 0052 0593     		str	r3, [sp, #20]
 228:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
  99              		.loc 1 228 3 is_stmt 1 view .LVU24
 100 0054 2946     		mov	r1, r5
 101 0056 3046     		mov	r0, r6
 102 0058 FFF7FEFF 		bl	HAL_GPIO_Init
 103              	.LVL1:
 229:Core/Src/main.c **** 
 230:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 231:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 232:Core/Src/main.c **** }
 104              		.loc 1 232 1 is_stmt 0 view .LVU25
 105 005c 06B0     		add	sp, sp, #24
 106              		.cfi_def_cfa_offset 16
 107              		@ sp needed
 108 005e 70BD     		pop	{r4, r5, r6, pc}
 109              	.L4:
 110              		.align	2
 111              	.L3:
ARM GAS  /tmp/ccqomWwO.s 			page 7


 112 0060 00100240 		.word	1073876992
 113 0064 000C0140 		.word	1073810432
 114              		.cfi_endproc
 115              	.LFE69:
 117              		.section	.text.MX_DMA_Init,"ax",%progbits
 118              		.align	1
 119              		.syntax unified
 120              		.thumb
 121              		.thumb_func
 123              	MX_DMA_Init:
 124              	.LFB68:
 193:Core/Src/main.c **** 
 125              		.loc 1 193 1 is_stmt 1 view -0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 8
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129 0000 00B5     		push	{lr}
 130              		.cfi_def_cfa_offset 4
 131              		.cfi_offset 14, -4
 132 0002 83B0     		sub	sp, sp, #12
 133              		.cfi_def_cfa_offset 16
 196:Core/Src/main.c **** 
 134              		.loc 1 196 3 view .LVU27
 135              	.LBB6:
 196:Core/Src/main.c **** 
 136              		.loc 1 196 3 view .LVU28
 196:Core/Src/main.c **** 
 137              		.loc 1 196 3 view .LVU29
 138 0004 0A4B     		ldr	r3, .L7
 139 0006 5A69     		ldr	r2, [r3, #20]
 140 0008 42F00102 		orr	r2, r2, #1
 141 000c 5A61     		str	r2, [r3, #20]
 196:Core/Src/main.c **** 
 142              		.loc 1 196 3 view .LVU30
 143 000e 5B69     		ldr	r3, [r3, #20]
 144 0010 03F00103 		and	r3, r3, #1
 145 0014 0193     		str	r3, [sp, #4]
 196:Core/Src/main.c **** 
 146              		.loc 1 196 3 view .LVU31
 147 0016 019B     		ldr	r3, [sp, #4]
 148              	.LBE6:
 196:Core/Src/main.c **** 
 149              		.loc 1 196 3 view .LVU32
 200:Core/Src/main.c ****   HAL_NVIC_EnableIRQ(DMA1_Channel3_IRQn);
 150              		.loc 1 200 3 view .LVU33
 151 0018 0022     		movs	r2, #0
 152 001a 1146     		mov	r1, r2
 153 001c 0D20     		movs	r0, #13
 154 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 155              	.LVL2:
 201:Core/Src/main.c **** 
 156              		.loc 1 201 3 view .LVU34
 157 0022 0D20     		movs	r0, #13
 158 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 159              	.LVL3:
 203:Core/Src/main.c **** 
 160              		.loc 1 203 1 is_stmt 0 view .LVU35
ARM GAS  /tmp/ccqomWwO.s 			page 8


 161 0028 03B0     		add	sp, sp, #12
 162              		.cfi_def_cfa_offset 4
 163              		@ sp needed
 164 002a 5DF804FB 		ldr	pc, [sp], #4
 165              	.L8:
 166 002e 00BF     		.align	2
 167              	.L7:
 168 0030 00100240 		.word	1073876992
 169              		.cfi_endproc
 170              	.LFE68:
 172              		.section	.text.Error_Handler,"ax",%progbits
 173              		.align	1
 174              		.global	Error_Handler
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 179              	Error_Handler:
 180              	.LFB70:
 233:Core/Src/main.c **** 
 234:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 235:Core/Src/main.c **** 
 236:Core/Src/main.c **** /* USER CODE END 4 */
 237:Core/Src/main.c **** 
 238:Core/Src/main.c **** /**
 239:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 240:Core/Src/main.c ****   * @retval None
 241:Core/Src/main.c ****   */
 242:Core/Src/main.c **** void Error_Handler(void)
 243:Core/Src/main.c **** {
 181              		.loc 1 243 1 is_stmt 1 view -0
 182              		.cfi_startproc
 183              		@ Volatile: function does not return.
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 244:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 245:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 246:Core/Src/main.c ****   __disable_irq();
 187              		.loc 1 246 3 view .LVU37
 188              	.LBB7:
 189              	.LBI7:
 190              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  /tmp/ccqomWwO.s 			page 9


  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  /tmp/ccqomWwO.s 			page 10


  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
ARM GAS  /tmp/ccqomWwO.s 			page 11


 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 191              		.loc 2 140 27 view .LVU38
 192              	.LBB8:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 193              		.loc 2 142 3 view .LVU39
 194              		.syntax unified
 195              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 196 0000 72B6     		cpsid i
 197              	@ 0 "" 2
 198              		.thumb
 199              		.syntax unified
 200              	.L10:
 201              	.LBE8:
 202              	.LBE7:
 247:Core/Src/main.c ****   while (1)
 203              		.loc 1 247 3 view .LVU40
 248:Core/Src/main.c ****   {
 249:Core/Src/main.c ****   }
 204              		.loc 1 249 3 view .LVU41
 247:Core/Src/main.c ****   while (1)
 205              		.loc 1 247 9 view .LVU42
 206 0002 FEE7     		b	.L10
 207              		.cfi_endproc
 208              	.LFE70:
 210              		.section	.text.MX_SPI1_Init,"ax",%progbits
 211              		.align	1
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 216              	MX_SPI1_Init:
 217              	.LFB67:
 157:Core/Src/main.c **** 
 218              		.loc 1 157 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222 0000 08B5     		push	{r3, lr}
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 3, -8
 225              		.cfi_offset 14, -4
 167:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 226              		.loc 1 167 3 view .LVU44
 167:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 227              		.loc 1 167 18 is_stmt 0 view .LVU45
 228 0002 0E48     		ldr	r0, .L15
 229 0004 0E4B     		ldr	r3, .L15+4
ARM GAS  /tmp/ccqomWwO.s 			page 12


 230 0006 0360     		str	r3, [r0]
 168:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 231              		.loc 1 168 3 is_stmt 1 view .LVU46
 168:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 232              		.loc 1 168 19 is_stmt 0 view .LVU47
 233 0008 4FF48273 		mov	r3, #260
 234 000c 4360     		str	r3, [r0, #4]
 169:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 235              		.loc 1 169 3 is_stmt 1 view .LVU48
 169:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 236              		.loc 1 169 24 is_stmt 0 view .LVU49
 237 000e 0023     		movs	r3, #0
 238 0010 8360     		str	r3, [r0, #8]
 170:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 239              		.loc 1 170 3 is_stmt 1 view .LVU50
 170:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_HIGH;
 240              		.loc 1 170 23 is_stmt 0 view .LVU51
 241 0012 C360     		str	r3, [r0, #12]
 171:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 242              		.loc 1 171 3 is_stmt 1 view .LVU52
 171:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 243              		.loc 1 171 26 is_stmt 0 view .LVU53
 244 0014 0222     		movs	r2, #2
 245 0016 0261     		str	r2, [r0, #16]
 172:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 246              		.loc 1 172 3 is_stmt 1 view .LVU54
 172:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 247              		.loc 1 172 23 is_stmt 0 view .LVU55
 248 0018 4361     		str	r3, [r0, #20]
 173:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 249              		.loc 1 173 3 is_stmt 1 view .LVU56
 173:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_4;
 250              		.loc 1 173 18 is_stmt 0 view .LVU57
 251 001a 4FF40072 		mov	r2, #512
 252 001e 8261     		str	r2, [r0, #24]
 174:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 253              		.loc 1 174 3 is_stmt 1 view .LVU58
 174:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 254              		.loc 1 174 32 is_stmt 0 view .LVU59
 255 0020 0822     		movs	r2, #8
 256 0022 C261     		str	r2, [r0, #28]
 175:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 257              		.loc 1 175 3 is_stmt 1 view .LVU60
 175:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 258              		.loc 1 175 23 is_stmt 0 view .LVU61
 259 0024 0362     		str	r3, [r0, #32]
 176:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 260              		.loc 1 176 3 is_stmt 1 view .LVU62
 176:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 261              		.loc 1 176 21 is_stmt 0 view .LVU63
 262 0026 4362     		str	r3, [r0, #36]
 177:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 263              		.loc 1 177 3 is_stmt 1 view .LVU64
 177:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 264              		.loc 1 177 29 is_stmt 0 view .LVU65
 265 0028 8362     		str	r3, [r0, #40]
 178:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
ARM GAS  /tmp/ccqomWwO.s 			page 13


 266              		.loc 1 178 3 is_stmt 1 view .LVU66
 178:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 267              		.loc 1 178 28 is_stmt 0 view .LVU67
 268 002a 0A23     		movs	r3, #10
 269 002c C362     		str	r3, [r0, #44]
 179:Core/Src/main.c ****   {
 270              		.loc 1 179 3 is_stmt 1 view .LVU68
 179:Core/Src/main.c ****   {
 271              		.loc 1 179 7 is_stmt 0 view .LVU69
 272 002e FFF7FEFF 		bl	HAL_SPI_Init
 273              	.LVL4:
 179:Core/Src/main.c ****   {
 274              		.loc 1 179 6 discriminator 1 view .LVU70
 275 0032 00B9     		cbnz	r0, .L14
 187:Core/Src/main.c **** 
 276              		.loc 1 187 1 view .LVU71
 277 0034 08BD     		pop	{r3, pc}
 278              	.L14:
 181:Core/Src/main.c ****   }
 279              		.loc 1 181 5 is_stmt 1 view .LVU72
 280 0036 FFF7FEFF 		bl	Error_Handler
 281              	.LVL5:
 282              	.L16:
 283 003a 00BF     		.align	2
 284              	.L15:
 285 003c 00000000 		.word	hspi1
 286 0040 00300140 		.word	1073819648
 287              		.cfi_endproc
 288              	.LFE67:
 290              		.section	.text.SystemClock_Config,"ax",%progbits
 291              		.align	1
 292              		.global	SystemClock_Config
 293              		.syntax unified
 294              		.thumb
 295              		.thumb_func
 297              	SystemClock_Config:
 298              	.LFB66:
 118:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 299              		.loc 1 118 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 64
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 10B5     		push	{r4, lr}
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 4, -8
 306              		.cfi_offset 14, -4
 307 0002 90B0     		sub	sp, sp, #64
 308              		.cfi_def_cfa_offset 72
 119:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 309              		.loc 1 119 3 view .LVU74
 119:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 310              		.loc 1 119 22 is_stmt 0 view .LVU75
 311 0004 06AC     		add	r4, sp, #24
 312 0006 2822     		movs	r2, #40
 313 0008 0021     		movs	r1, #0
 314 000a 2046     		mov	r0, r4
 315 000c FFF7FEFF 		bl	memset
ARM GAS  /tmp/ccqomWwO.s 			page 14


 316              	.LVL6:
 120:Core/Src/main.c **** 
 317              		.loc 1 120 3 is_stmt 1 view .LVU76
 120:Core/Src/main.c **** 
 318              		.loc 1 120 22 is_stmt 0 view .LVU77
 319 0010 0023     		movs	r3, #0
 320 0012 0193     		str	r3, [sp, #4]
 321 0014 0293     		str	r3, [sp, #8]
 322 0016 0393     		str	r3, [sp, #12]
 323 0018 0493     		str	r3, [sp, #16]
 324 001a 0593     		str	r3, [sp, #20]
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 325              		.loc 1 125 3 is_stmt 1 view .LVU78
 125:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 326              		.loc 1 125 36 is_stmt 0 view .LVU79
 327 001c 0223     		movs	r3, #2
 328 001e 0693     		str	r3, [sp, #24]
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 329              		.loc 1 126 3 is_stmt 1 view .LVU80
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 330              		.loc 1 126 30 is_stmt 0 view .LVU81
 331 0020 0122     		movs	r2, #1
 332 0022 0A92     		str	r2, [sp, #40]
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 333              		.loc 1 127 3 is_stmt 1 view .LVU82
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 334              		.loc 1 127 41 is_stmt 0 view .LVU83
 335 0024 1022     		movs	r2, #16
 336 0026 0B92     		str	r2, [sp, #44]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 337              		.loc 1 128 3 is_stmt 1 view .LVU84
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI_DIV2;
 338              		.loc 1 128 34 is_stmt 0 view .LVU85
 339 0028 0D93     		str	r3, [sp, #52]
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL16;
 340              		.loc 1 129 3 is_stmt 1 view .LVU86
 130:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 341              		.loc 1 130 3 view .LVU87
 130:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 342              		.loc 1 130 32 is_stmt 0 view .LVU88
 343 002a 4FF46013 		mov	r3, #3670016
 344 002e 0F93     		str	r3, [sp, #60]
 131:Core/Src/main.c ****   {
 345              		.loc 1 131 3 is_stmt 1 view .LVU89
 131:Core/Src/main.c ****   {
 346              		.loc 1 131 7 is_stmt 0 view .LVU90
 347 0030 2046     		mov	r0, r4
 348 0032 FFF7FEFF 		bl	HAL_RCC_OscConfig
 349              	.LVL7:
 131:Core/Src/main.c ****   {
 350              		.loc 1 131 6 discriminator 1 view .LVU91
 351 0036 78B9     		cbnz	r0, .L21
 138:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 352              		.loc 1 138 3 is_stmt 1 view .LVU92
 138:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 353              		.loc 1 138 31 is_stmt 0 view .LVU93
 354 0038 0F23     		movs	r3, #15
ARM GAS  /tmp/ccqomWwO.s 			page 15


 355 003a 0193     		str	r3, [sp, #4]
 140:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 356              		.loc 1 140 3 is_stmt 1 view .LVU94
 140:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 357              		.loc 1 140 34 is_stmt 0 view .LVU95
 358 003c 0221     		movs	r1, #2
 359 003e 0291     		str	r1, [sp, #8]
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 360              		.loc 1 141 3 is_stmt 1 view .LVU96
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 361              		.loc 1 141 35 is_stmt 0 view .LVU97
 362 0040 0023     		movs	r3, #0
 363 0042 0393     		str	r3, [sp, #12]
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 364              		.loc 1 142 3 is_stmt 1 view .LVU98
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 365              		.loc 1 142 36 is_stmt 0 view .LVU99
 366 0044 4FF48062 		mov	r2, #1024
 367 0048 0492     		str	r2, [sp, #16]
 143:Core/Src/main.c **** 
 368              		.loc 1 143 3 is_stmt 1 view .LVU100
 143:Core/Src/main.c **** 
 369              		.loc 1 143 36 is_stmt 0 view .LVU101
 370 004a 0593     		str	r3, [sp, #20]
 145:Core/Src/main.c ****   {
 371              		.loc 1 145 3 is_stmt 1 view .LVU102
 145:Core/Src/main.c ****   {
 372              		.loc 1 145 7 is_stmt 0 view .LVU103
 373 004c 01A8     		add	r0, sp, #4
 374 004e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 375              	.LVL8:
 145:Core/Src/main.c ****   {
 376              		.loc 1 145 6 discriminator 1 view .LVU104
 377 0052 18B9     		cbnz	r0, .L22
 149:Core/Src/main.c **** 
 378              		.loc 1 149 1 view .LVU105
 379 0054 10B0     		add	sp, sp, #64
 380              		.cfi_remember_state
 381              		.cfi_def_cfa_offset 8
 382              		@ sp needed
 383 0056 10BD     		pop	{r4, pc}
 384              	.L21:
 385              		.cfi_restore_state
 133:Core/Src/main.c ****   }
 386              		.loc 1 133 5 is_stmt 1 view .LVU106
 387 0058 FFF7FEFF 		bl	Error_Handler
 388              	.LVL9:
 389              	.L22:
 147:Core/Src/main.c ****   }
 390              		.loc 1 147 5 view .LVU107
 391 005c FFF7FEFF 		bl	Error_Handler
 392              	.LVL10:
 393              		.cfi_endproc
 394              	.LFE66:
 396              		.section	.text.main,"ax",%progbits
 397              		.align	1
 398              		.global	main
ARM GAS  /tmp/ccqomWwO.s 			page 16


 399              		.syntax unified
 400              		.thumb
 401              		.thumb_func
 403              	main:
 404              	.LFB65:
  69:Core/Src/main.c **** 
 405              		.loc 1 69 1 view -0
 406              		.cfi_startproc
 407              		@ Volatile: function does not return.
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410 0000 08B5     		push	{r3, lr}
 411              		.cfi_def_cfa_offset 8
 412              		.cfi_offset 3, -8
 413              		.cfi_offset 14, -4
  78:Core/Src/main.c **** 
 414              		.loc 1 78 3 view .LVU109
 415 0002 FFF7FEFF 		bl	HAL_Init
 416              	.LVL11:
  85:Core/Src/main.c **** 
 417              		.loc 1 85 3 view .LVU110
 418 0006 FFF7FEFF 		bl	SystemClock_Config
 419              	.LVL12:
  92:Core/Src/main.c ****   MX_DMA_Init();
 420              		.loc 1 92 3 view .LVU111
 421 000a FFF7FEFF 		bl	MX_GPIO_Init
 422              	.LVL13:
  93:Core/Src/main.c ****   MX_SPI1_Init();
 423              		.loc 1 93 3 view .LVU112
 424 000e FFF7FEFF 		bl	MX_DMA_Init
 425              	.LVL14:
  94:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 426              		.loc 1 94 3 view .LVU113
 427 0012 FFF7FEFF 		bl	MX_SPI1_Init
 428              	.LVL15:
  96:Core/Src/main.c ****   ST7789_TestColors();
 429              		.loc 1 96 3 view .LVU114
 430 0016 FFF7FEFF 		bl	ST7789_Init
 431              	.LVL16:
  97:Core/Src/main.c ****   ST7789_Fill_Color(BLACK);
 432              		.loc 1 97 3 view .LVU115
 433 001a FFF7FEFF 		bl	ST7789_TestColors
 434              	.LVL17:
  98:Core/Src/main.c ****   /* USER CODE END 2 */
 435              		.loc 1 98 3 view .LVU116
 436 001e 0020     		movs	r0, #0
 437 0020 FFF7FEFF 		bl	ST7789_Fill_Color
 438              	.LVL18:
 439              	.L24:
 103:Core/Src/main.c ****   {
 440              		.loc 1 103 3 view .LVU117
 105:Core/Src/main.c ****     /* USER CODE END WHILE */
 441              		.loc 1 105 5 discriminator 1 view .LVU118
 442 0024 FFF7FEFF 		bl	ST7789_Test
 443              	.LVL19:
 103:Core/Src/main.c ****   {
 444              		.loc 1 103 9 view .LVU119
ARM GAS  /tmp/ccqomWwO.s 			page 17


 445 0028 FCE7     		b	.L24
 446              		.cfi_endproc
 447              	.LFE65:
 449              		.global	hdma_spi1_tx
 450              		.section	.bss.hdma_spi1_tx,"aw",%nobits
 451              		.align	2
 454              	hdma_spi1_tx:
 455 0000 00000000 		.space	68
 455      00000000 
 455      00000000 
 455      00000000 
 455      00000000 
 456              		.global	hspi1
 457              		.section	.bss.hspi1,"aw",%nobits
 458              		.align	2
 461              	hspi1:
 462 0000 00000000 		.space	88
 462      00000000 
 462      00000000 
 462      00000000 
 462      00000000 
 463              		.text
 464              	.Letext0:
 465              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 466              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 467              		.file 5 "/usr/arm-none-eabi/include/sys/_stdint.h"
 468              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 469              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 470              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 471              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 472              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 473              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 474              		.file 12 "Core/Inc/st7789.h"
 475              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 476              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 477              		.file 15 "<built-in>"
ARM GAS  /tmp/ccqomWwO.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccqomWwO.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccqomWwO.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccqomWwO.s:112    .text.MX_GPIO_Init:00000060 $d
     /tmp/ccqomWwO.s:118    .text.MX_DMA_Init:00000000 $t
     /tmp/ccqomWwO.s:123    .text.MX_DMA_Init:00000000 MX_DMA_Init
     /tmp/ccqomWwO.s:168    .text.MX_DMA_Init:00000030 $d
     /tmp/ccqomWwO.s:173    .text.Error_Handler:00000000 $t
     /tmp/ccqomWwO.s:179    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccqomWwO.s:211    .text.MX_SPI1_Init:00000000 $t
     /tmp/ccqomWwO.s:216    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
     /tmp/ccqomWwO.s:285    .text.MX_SPI1_Init:0000003c $d
     /tmp/ccqomWwO.s:461    .bss.hspi1:00000000 hspi1
     /tmp/ccqomWwO.s:291    .text.SystemClock_Config:00000000 $t
     /tmp/ccqomWwO.s:297    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccqomWwO.s:397    .text.main:00000000 $t
     /tmp/ccqomWwO.s:403    .text.main:00000000 main
     /tmp/ccqomWwO.s:454    .bss.hdma_spi1_tx:00000000 hdma_spi1_tx
     /tmp/ccqomWwO.s:451    .bss.hdma_spi1_tx:00000000 $d
     /tmp/ccqomWwO.s:458    .bss.hspi1:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_SPI_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
ST7789_Init
ST7789_TestColors
ST7789_Fill_Color
ST7789_Test
